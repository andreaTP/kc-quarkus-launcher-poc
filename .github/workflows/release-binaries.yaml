name: Release CLI binaries

on:
  push:

jobs:
  build-native-binary:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        gu-binary: [gu, gu.cmd]
        exclude:
          - os: ubuntu-latest
            gu-binary: gu.cmd
          - os: macos-latest
            gu-binary: gu.cmd
          - os: windows-latest
            gu-binary: gu
    continue-on-error: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          version: '22.1.0'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install native-image component
        run: |
          ${{ matrix.gu-binary }} install native-image

      - name: 'Set up Visual C Build Tools Workload for Visual Studio 2019 Build Tools'
        if: runner.os == 'Windows'
        run: |
          choco upgrade -y visualstudio2019-workload-vctools
      - name: 'Build Native Image'
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvars64.bat"

      # - name: Setup Maven command and Artifact path on Win
      #   if: runner.os == 'Windows'
      #   run: |
      #     echo "mvnCmd=\"cmd /c 'call "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvars64.bat" && mvn package -Pnative'\"" >> $GITHUB_ENV
      #     echo "artifactPath=\".\target\code-with-quarkus-*-runner.exe" >> $GITHUB_ENV

      # - name: Setup Maven command and Artifact path on Linux and Mac
      #   if: runner.os != 'Windows'
      #   run: |
      #     echo "mvnCmd=\"./mvnw package -Pnative\"" >> $GITHUB_ENV
      #     echo "artifactPath=\"./target/code-with-quarkus-*-runner" >> $GITHUB_ENV

      - name: Compile to native binaries
        run: ${{ env.mvnCmd }}

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: code-with-quarkus-${{ matrix.os }}
          path: ./target/code-with-quarkus-*-runner*
      # - name: 'Upload executable'
      #   if: success()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: code-with-quarkus-${{ matrix.os }}
      #     path: ${{ matrix.executable-path }}
